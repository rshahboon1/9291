{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/media/light/79F9655F0EA04215/workZone/ui/9291/92910/node_modules/react-native-progress-bar-animated/src/AnimatedProgressBar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\n\nvar ProgressBar = function (_React$Component) {\n  _inherits(ProgressBar, _React$Component);\n\n  var _super = _createSuper(ProgressBar);\n\n  function ProgressBar(props) {\n    var _this;\n\n    _classCallCheck(this, ProgressBar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      progress: props.value\n    };\n    _this.widthAnimation = new Animated.Value(0);\n    _this.backgroundAnimation = new Animated.Value(0);\n    _this.backgroundInterpolationValue = null;\n    return _this;\n  }\n\n  _createClass(ProgressBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.state.progress > 0) {\n        this.animateWidth();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var _this2 = this;\n\n      if (props.value !== this.state.progress) {\n        if (props.value >= 0 && props.value <= this.props.maxValue) {\n          this.setState({\n            progress: props.value\n          }, function () {\n            if (_this2.state.progress === _this2.props.maxValue) {\n              var callback = _this2.props.onComplete;\n\n              if (callback) {\n                setTimeout(callback, _this2.props.barAnimationDuration);\n              }\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.value !== prevProps.value) {\n        this.animateWidth();\n\n        if (this.props.backgroundColorOnComplete) {\n          if (this.props.value === this.props.maxValue) {\n            this.animateBackground();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"animateWidth\",\n    value: function animateWidth() {\n      var toValue = this.props.width * this.state.progress / 100 - this.props.borderWidth * 2;\n      Animated.timing(this.widthAnimation, {\n        easing: Easing[this.props.barEasing],\n        toValue: toValue > 0 ? toValue : 0,\n        duration: this.props.barAnimationDuration\n      }).start();\n    }\n  }, {\n    key: \"animateBackground\",\n    value: function animateBackground() {\n      Animated.timing(this.backgroundAnimation, {\n        toValue: 1,\n        duration: this.props.backgroundAnimationDuration\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.backgroundColorOnComplete) {\n        this.backgroundInterpolationValue = this.backgroundAnimation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [this.props.backgroundColor, this.props.backgroundColorOnComplete]\n        });\n      }\n\n      return React.createElement(View, {\n        style: {\n          width: this.props.width,\n          height: this.props.height,\n          borderWidth: this.props.borderWidth,\n          borderColor: this.props.borderColor,\n          borderRadius: this.props.borderRadius\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          height: this.props.height - this.props.borderWidth * 2,\n          width: this.widthAnimation,\n          backgroundColor: this.backgroundInterpolationValue || this.props.backgroundColor,\n          borderRadius: this.props.borderRadius\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ProgressBar;\n}(React.Component);\n\nProgressBar.propTypes = {\n  value: PropTypes.number,\n  maxValue: PropTypes.number,\n  barEasing: PropTypes.oneOf(['bounce', 'cubic', 'ease', 'sin', 'linear', 'quad']),\n  barAnimationDuration: PropTypes.number,\n  backgroundAnimationDuration: PropTypes.number,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  backgroundColorOnComplete: PropTypes.string,\n  borderWidth: PropTypes.number,\n  borderColor: PropTypes.string,\n  borderRadius: PropTypes.number,\n  onComplete: PropTypes.func\n};\nProgressBar.defaultProps = {\n  value: 0,\n  maxValue: 100,\n  barEasing: 'linear',\n  barAnimationDuration: 500,\n  backgroundAnimationDuration: 2500,\n  height: 15,\n  backgroundColor: '#148cF0',\n  backgroundColorOnComplete: null,\n  borderWidth: 1,\n  borderColor: '#C8CCCE',\n  borderRadius: 6,\n  onComplete: null\n};\nexport default ProgressBar;","map":{"version":3,"sources":["/media/light/79F9655F0EA04215/workZone/ui/9291/92910/node_modules/react-native-progress-bar-animated/src/AnimatedProgressBar.js"],"names":["React","PropTypes","ProgressBar","props","state","progress","value","widthAnimation","Animated","Value","backgroundAnimation","backgroundInterpolationValue","animateWidth","maxValue","setState","callback","onComplete","setTimeout","barAnimationDuration","prevProps","backgroundColorOnComplete","animateBackground","toValue","width","borderWidth","timing","easing","Easing","barEasing","duration","start","backgroundAnimationDuration","interpolate","inputRange","outputRange","backgroundColor","height","borderColor","borderRadius","Component","propTypes","number","oneOf","isRequired","string","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  View,\n  Animated,\n  Easing,\n} from 'react-native';\n\nclass ProgressBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: props.value,\n    };\n    \n    this.widthAnimation = new Animated.Value(0);\n    this.backgroundAnimation = new Animated.Value(0);\n    this.backgroundInterpolationValue = null;\n  }\n\n  componentDidMount() {\n    if (this.state.progress > 0) {\n      this.animateWidth();\n    }\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.value !== this.state.progress) {\n      if (props.value >= 0 && props.value <= this.props.maxValue) {\n        this.setState({ progress: props.value }, () => {\n          if (this.state.progress === this.props.maxValue) {\n            // Callback after complete the progress\n            const callback = this.props.onComplete;\n            if (callback) {\n              setTimeout(callback, this.props.barAnimationDuration);\n            }\n          }\n        });\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value) {\n      this.animateWidth();\n\n      if (this.props.backgroundColorOnComplete) {\n        if (this.props.value === this.props.maxValue) {\n          this.animateBackground();\n        }\n      }\n    }\n  }\n\n  animateWidth() {\n    const toValue = ((this.props.width * this.state.progress) / 100) - this.props.borderWidth * 2;\n\n    Animated.timing(this.widthAnimation, {\n      easing: Easing[this.props.barEasing],\n      toValue: toValue > 0 ? toValue : 0,\n      duration: this.props.barAnimationDuration,\n    }).start();\n  }\n\n  animateBackground() {\n    Animated.timing(this.backgroundAnimation, {\n      toValue: 1,\n      duration: this.props.backgroundAnimationDuration,\n    }).start();\n  }\n\n  render() {\n    if (this.props.backgroundColorOnComplete) {\n      this.backgroundInterpolationValue = this.backgroundAnimation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [this.props.backgroundColor, this.props.backgroundColorOnComplete],\n      });\n    }\n\n    return (\n      <View style={{\n        width: this.props.width,\n        height: this.props.height,\n        borderWidth: this.props.borderWidth,\n        borderColor: this.props.borderColor,\n        borderRadius: this.props.borderRadius,\n      }}\n      >\n        <Animated.View style={{\n          height: this.props.height - (this.props.borderWidth * 2),\n          width: this.widthAnimation,\n          backgroundColor: this.backgroundInterpolationValue || this.props.backgroundColor,\n          borderRadius: this.props.borderRadius,\n        }}\n        />\n      </View>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n\n  /**\n   * Bar values\n   */\n  value: PropTypes.number,\n  maxValue: PropTypes.number,\n\n  /**\n   * Animations\n   */\n  barEasing: PropTypes.oneOf([\n    'bounce',\n    'cubic',\n    'ease',\n    'sin',\n    'linear',\n    'quad',\n  ]),\n  barAnimationDuration: PropTypes.number,\n  backgroundAnimationDuration: PropTypes.number,\n\n  /**\n   * StyleSheet props\n   */\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  backgroundColorOnComplete: PropTypes.string,\n  borderWidth: PropTypes.number,\n  borderColor: PropTypes.string,\n  borderRadius: PropTypes.number,\n\n  /**\n   * Callbacks\n   */\n  onComplete: PropTypes.func,\n};\n\nProgressBar.defaultProps = {\n  value: 0,\n  maxValue: 100,\n\n  barEasing: 'linear',\n  barAnimationDuration: 500,\n  backgroundAnimationDuration: 2500,\n\n  height: 15,\n\n  backgroundColor: '#148cF0',\n  backgroundColorOnComplete: null,\n\n  borderWidth: 1,\n  borderColor: '#C8CCCE',\n  borderRadius: 6,\n\n  onComplete: null,\n};\n\nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"module"}